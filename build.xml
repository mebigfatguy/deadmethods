<!--
/*
 * deadmethods - A unused methods detector
 * Copyright 2011-2012 MeBigFatGuy.com
 * Copyright 2011-2012 Dave Brosius
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations
 * under the License.
 */
-->

<project name="deadmethods" default="build">

	<property file="build.properties"/>

	<property name="src.dir" value="${basedir}/src"/>
	<property name="samples.dir" value="${basedir}/samples"/>
	<property name="classes.dir" value="${basedir}/classes"/>
	<property name="lib.dir" value="${basedir}/lib"/>
	<property name="javadoc.dir" value="${basedir}/javadoc"/>
	<property name="htdocs.dir" value="${basedir}/htdocs"/>
	<property name="javac.source" value="1.5"/>
	<property name="javac.target" value="1.5"/>
	<property name="javac.deprecation" value="on"/>
	<property name="javac.debug" value="on"/>
	
    <property name="ant_.version" value="1.8.2"/>
    <property name="asm.version" value="3.3"/>
    <property name="junit.version" value="4.10"/>

    <property name="ant-url" value="http://repo1.maven.org/maven2/org/apache/ant/ant/${ant_.version}/ant-${ant_.version}.jar"/> 
    <property name="asm-url" value="http://repo1.maven.org/maven2/asm/asm/${asm.version}/asm-${asm.version}.jar"/> 
    <property name="junit-url" value="http://repo1.maven.org/maven2/junit/junit/${junit.version}/junit-${junit.version}.jar"/> 

	<path id="deadmethods.classpath">
		<pathelement location="${lib.dir}/ant-${ant_.version}.jar"/>
		<pathelement location="${lib.dir}/asm-${asm.version}.jar"/>
		<pathelement location="${lib.dir}/junit-${junit.version}.jar"/>
	</path>
	
	<path id="deadmethods.test.classpath">
		<pathelement location="${classes.dir}"/>
		<pathelement location="${lib.dir}/ant-${ant_.version}.jar"/>
		<pathelement location="${lib.dir}/asm-${asm.version}.jar"/>
		<pathelement location="${lib.dir}/junit-${junit.version}.jar"/>
	</path>
	
	<path id="deadmethods.classes.classpath">
		<pathelement location="${classes.dir}"/>
	</path>
	
	<target name="clean" description="removes all generated collateral">
		<delete dir="${classes.dir}"/>
		<delete dir="${javadoc.dir}"/>
		<delete file="${basedir}/deadmethods-${deadmethods.version}.jar"/>
		<delete file="${basedir}/deadmethods-src-${deadmethods.version}.zip"/>
	</target>

	<target name="-init" description="prepares repository for a build">
		<mkdir dir="${classes.dir}"/>
		<mkdir dir="${javadoc.dir}"/>
		<mkdir dir="${classes.dir}/com"/>
		<mkdir dir="${classes.dir}/com/mebigfatguy"/>
		<mkdir dir="${classes.dir}/com/mebigfatguy/fbcontrib"/>
		<mkdir dir="${classes.dir}/com/mebigfatguy/fbcontrib/detect"/>
	</target>

	<target name="ant-check">
        <available file="${basedir}/lib/ant-${ant_.version}.jar" property="ant-exists"/>
    </target>

	<target name="asm-check">
        <available file="${basedir}/lib/asm-${asm.version}.jar" property="asm-exists"/>
    </target>

	<target name="junit-check">
        <available file="${basedir}/lib/junit-${junit.version}.jar" property="junit-exists"/>
    </target>

    <target name="install-ant" depends="ant-check" unless="ant-exists" description="installs ant.jar into lib">
        <get src="${ant-url}" dest="${basedir}/lib/ant-${ant_.version}.jar" verbose="true" ignoreerrors="true"/>
    </target>
	
    <target name="install-asm" depends="asm-check" unless="asm-exists" description="installs asm.jar into lib">
        <get src="${asm-url}" dest="${basedir}/lib/asm-${asm.version}.jar" verbose="true" ignoreerrors="true"/>
    </target>

    <target name="install-junit" depends="junit-check" unless="junit-exists" description="installs junit.jar into lib">
        <get src="${junit-url}" dest="${basedir}/lib/junit-${junit.version}.jar" verbose="true" ignoreerrors="true"/>
    </target>

    <target name="pull" depends="install-ant, install-asm, install-junit" description="pull 3rdparty jars to the lib directory"/>
   	
    <target name="compile" depends="-init, pull" description="compiles java files">
		<javac srcdir="${src.dir}"
				destdir="${classes.dir}"
				source="${javac.source}"
				target="${javac.target}"
				deprecation="${javac.deprecation}"
				debug="${javac.debug}"
				includeantruntime="true">
			<classpath refid="deadmethods.classpath"/>
		</javac>
	</target>
	
	<target name="compile_samples" depends="-init" description="compiles java files">
		<javac srcdir="${samples.dir}"
				destdir="${samples.dir}"
				source="${javac.source}"
				target="${javac.target}"
				deprecation="${javac.deprecation}"
				debug="${javac.debug}"
				includeantruntime="false">
			<classpath refid="deadmethods.classpath"/>
		</javac>
	</target>

	<target name="jar" depends="compile" description="produces the deadmethods jar file">
		<jar destfile="${basedir}/deadmethods-${deadmethods.version}.jar">
			<fileset dir="${classes.dir}">
				<include name="**/*.class"/>
			</fileset>
			<manifest>
				<attribute name="deadmethods-version" value="${deadmethods.version}"/>
				<attribute name="Bundle-ManifestVersion" value="2"/>
				<attribute name="Bundle-Name" value="deadmethods ant task"/>
				<attribute name="Bundle-SymbolicName" value="deadmethods; singleton:=true"/>
				<attribute name="Bundle-Version" value="${deadmethods.version}"/>				
				<attribute name="Bundle-ClassPath" value="."/>
				<attribute name="Bundle-Vendor" value="DeadMethods Project"/>
<!--
				<attribute name="Require-Bundle" value="edu.umd.cs.findbugs.plugin.eclipse"/>
-->
				<attribute name="Bundle-ActivationPolicy" value="lazy"/>
			</manifest>
		</jar>
	</target>

	<target name="srczip" description="builds the source distribution zip file">
		<zip destfile="${basedir}/deadmethods-src-${deadmethods.version}.zip" basedir="${basedir}">
			<fileset dir="${src.dir}">
				<include name="**/*.java"/>
				<include name="**/*.license"/>
				<include name="lib/*.jar"/>
			</fileset>
		</zip>
	</target>

	<target name="javadoc" depends="-init" description="build the javadoc for the project">
		<javadoc packagenames="com.mebigfatguy.*"
				 sourcepath="${src.dir}"
				 classpathref="deadmethods.classpath"
				 destdir="${javadoc.dir}"
				 windowtitle="deadmethods api">
		    <doctitle><![CDATA[<h1>fb-contrib javadoc</h1>]]></doctitle>
		    <bottom><![CDATA[<i>Copyright &#169; 2010 MeBigFatGuy.com. All Rights Reserved.</i>]]></bottom>
		</javadoc>
	</target>

	<target name="build" depends="clean, -init, compile, compile_samples, jar" description="builds the deadmethods jar">
	</target>

	<target name="release" depends="build, srczip, javadoc" description="prepares everything for a release"/>

	<target name="test" depends="jar" description="run deadmethods on itself">
		<taskdef name="deadmethods" classname="com.mebigfatguy.deadmethods.FindDeadMethods">
			<classpath refid="deadmethods.test.classpath"/>
		</taskdef>
	
		<deadmethods>
			<classpath refid="deadmethods.classes.classpath"/>
			<auxClasspath refid="deadmethods.test.classpath"/>
		</deadmethods>
	</target>
</project>
